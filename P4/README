Hao Li (hl824) , Mingwei Tian (mt643)

CS4411 Project 4 - Reliable Networking and Streams

The progamming is done in the Linux/GCC environment.

--------------------------------------------------------------------------------
Project Description
http://www.cs.cornell.edu/courses/cs4410/2012fa/CS4411/projects/project3
Frequently Asked Questions
http://www.cs.cornell.edu/courses/cs4410/2012fa/CS4411/projects/project3/faq.html

1. minisocket_t minisocket_server_create(int port, minisocket_error *error):
	server create minisocket structure, set state to listen, P() on receive semaphore
	waked up on receive semaphore, check state and received data, if is listen and data is syn, send synack and timeout, set state to synreceived,
	if received data before timeout, check state and received data, if is synreceived and data is ack, set state establish, return socket.
	else set state to listen and P() on receive semaphore

2. minisocket_t minisocket_client_create(network_address_t addr, int port, minisocket_error *error):
	client create minisocket structure, set state synsent, send syn to server and timeout.
	if received data before timeout and state is synsent and data is synack then send ack and state to established
	else set error to noserver, return NULL socket

3. int minisocket_send(minisocket_t socket, minimsg_t msg, int len, minisocket_error *error):
	fragment msg and send with timeout with synnum
	if timeout, set error to senderror (not sure), return sent number of bytes
	else return sent number of byte

4. int minisocket_receive(minisocket_t socket, minimsg_t msg, int max_len, minisocket_error *error):
	P() on receive semaphore, on wakeup, if state is established and data is normal, send ack once.
	return number of bytes received.

5. void minisocket_close(minisocket_t socket):


new functions need:
	/* transmit 7 times before get ack, return -1 if timeout 7 times */
	int minisocket_transmit(minisocket_t socket, char msg_type, char *buf, int len)

Q: Use a daemon for minisocket? After a packet is buffered, even if no receive is called, the packet should be ACKed.
Doing this with interrupt disabled is expensive.
A: Found on slides. Yes.

Q: What happens when network_send_pkt sent out incomplete packet, but with
correct seq and ack?


TO DO:
1. End all the receive when minisocket_close is called. Could use a counter to record how many is waiting and V that semaphore that many times.
2. Make it thread safe.

